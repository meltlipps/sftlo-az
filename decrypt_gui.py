import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from cryptography.fernet import Fernet
import os

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏µ‡∏¢‡πå
def load_key(key_path="secret.key"):
    if not os.path.exists(key_path):
        messagebox.showerror("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Key", f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå: {key_path}")
        return None
    return open(key_path, "rb").read()

# ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ü‡∏•‡πå
def decrypt_file(filepath, key):
    try:
        fernet = Fernet(key)
        with open(filepath, "rb") as enc_file:
            encrypted = enc_file.read()
        decrypted = fernet.decrypt(encrypted)

        if filepath.endswith(".enc"):
            output_path = filepath[:-4]  # ‡∏ï‡∏±‡∏î ".enc"
        else:
            output_path = filepath + ".dec"

        with open(output_path, "wb") as dec_file:
            dec_file.write(decrypted)

        return output_path
    except Exception as e:
        return str(e)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .enc
def choose_file():
    file_path = filedialog.askopenfilename(title="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .enc", filetypes=[("Encrypted files", "*.enc")])
    if file_path:
        key = load_key()
        if not key:
            return
        result = decrypt_file(file_path, key)
        if os.path.exists(result):
            status_var.set(f"‚úÖ ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡πâ‡∏ß: {os.path.basename(result)}")
            messagebox.showinfo("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", f"‚úÖ ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß:\n{os.path.basename(result)}")
        else:
            status_var.set("‚ùå ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
            messagebox.showerror("‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", f"‚ùå ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n{result}")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á
window = tk.Tk()
window.title("üõ°Ô∏è Decrypt .enc File")
window.geometry("400x200")
window.resizable(False, False)

style = ttk.Style(window)
style.configure("TButton", font=("Segoe UI", 11), padding=10)
style.configure("TLabel", font=("Segoe UI", 11))

# Label ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
label = ttk.Label(window, text="üìÇ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .enc ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™")
label.pack(pady=(20, 10))

# ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
select_button = ttk.Button(window, text="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .enc", command=choose_file)
select_button.pack(pady=10)

# ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
status_var = tk.StringVar()
status_label = ttk.Label(window, textvariable=status_var, foreground="green")
status_label.pack(pady=(10, 5))

# Run main loop
window.mainloop()
